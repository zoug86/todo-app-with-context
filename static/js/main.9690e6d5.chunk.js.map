{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","contexts/todos.context.js","hooks/useLocalStorageReducer.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","value","setValue","e","target","reducer","action","type","id","uuid","task","completed","filter","todo","map","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","val","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","children","EditTodoForm","toggleEditForm","useContext","useInputState","handleChange","reset","onSubmit","preventDefault","style","marginLeft","wirth","TextField","onChange","margin","fullWidth","autoFocus","Todo","useToggleState","isEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction","IconButton","aria-label","memo","TodoList","length","Paper","List","i","Fragment","Divider","TodoForm","padding","label","TodoApp","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9690e6d5.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useToggle(initialVal = false) {\r\n    const [state, setState] = useState(initialVal);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggle;","import { useState } from 'react';\r\n\r\nexport default initialVal => {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n    const reset = () => {\r\n        setValue(\"\");\r\n    };\r\n    return [value, handleChange, reset];\r\n}\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: uuid(), task: action.task, completed: false }];\r\n        case \"REMOVE\":\r\n            return state.filter(todo => todo.id !== action.id);\r\n        case \"TOGGLE\":\r\n            return state.map(todo =>\r\n                action.id === todo.id ? { ...todo, completed: !todo.completed } : todo);\r\n        case \"EDIT\":\r\n            return state.map(todo =>\r\n                action.id === todo.id ? { ...todo, task: action.newTask } : todo);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React, { createContext } from 'react';\r\nimport todoReducer from '../reducers/todo.reducer';\r\nimport { useLocalStorageReducer } from '../hooks/useLocalStorageReducer';\r\n\r\nconst defaultTodos = [\r\n    { id: 1, task: \"Mow the lawn using goats\", completed: false },\r\n    { id: 2, task: \"Release lady bugs into garden\", completed: true }\r\n];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport default function TodosProvider(props) {\r\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", defaultTodos, todoReducer);\r\n    return (\r\n        <TodosContext.Provider value={todos}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </TodosContext.Provider>\r\n    )\r\n}","import { useEffect, useReducer } from 'react';\r\n\r\nexport function useLocalStorageReducer(key, defaultVal, reducer) {\r\n    // make piece of state based of value in localstorage (or default)\r\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n        } catch (e) {\r\n            val = defaultVal;\r\n        }\r\n        return val;\r\n    });\r\n\r\n    // use useEffect to update localstorage when state changes:\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state]);\r\n    return [state, dispatch];\r\n}\r\n\r\n\r\n//export  useLocalStorageReducer;","import React, { useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './contexts/todos.context';\r\n\r\n\r\nfunction EditTodoForm({ id, task, toggleEditForm }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const [value, handleChange, reset] = useInputState(task);\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch({ type: \"EDIT\", newTask: value, id: id })\r\n            toggleEditForm();\r\n            reset();\r\n        }}\r\n            style={{ marginLeft: \"1rem\", wirth: \"50%\" }}\r\n\r\n        >\r\n            <TextField onChange={handleChange} margin=\"normal\" value={value} fullWidth autoFocus />\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default EditTodoForm;","import React, { useContext, memo } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport { DispatchContext } from './contexts/todos.context';\r\n\r\n\r\nfunction Todo({ id, task, completed }) {\r\n    const dispatch = useContext(DispatchContext);\r\n    const [isEditing, toggle] = useToggleState(false); // defaults to false either way\r\n    return (\r\n        <ListItem style={{ height: \"64px\" }}>\r\n            { isEditing ? <EditTodoForm id={id} task={task} toggleEditForm={toggle} /> : (\r\n                <>\r\n                    <Checkbox tabIndex={-1} checked={completed} onClick={() => dispatch({ type: \"TOGGLE\", id: id })} />\r\n                    <ListItemText key={id} style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\r\n                        {task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label='Delete' onClick={() => dispatch({ type: \"REMOVE\", id: id })}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label='Edit' onClick={toggle} >\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            )}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default memo(Todo);","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Todo from './Todo';\r\nimport { TodosContext } from './contexts/todos.context';\r\n\r\nfunction TodoList() {\r\n    const todos = useContext(TodosContext);\r\n    if (todos.length) {\r\n        return (\r\n            < Paper >\r\n                <List>\r\n                    {todos.map((todo, i) => (\r\n                        <React.Fragment key={i}>\r\n                            <Todo {...todo} key={todo.id} />\r\n                            {i < todos.length - 1 && <Divider />}\r\n                        </React.Fragment>\r\n\r\n                    ))}\r\n                </List>\r\n\r\n            </Paper >\r\n        )\r\n    } return null;\r\n\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from 'react';\r\nimport useInputState from './hooks/useInputState';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { DispatchContext } from './contexts/todos.context';\r\n\r\nfunction TodoForm() {\r\n    const [value, handleChange, reset] = useInputState(\"\");\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    return (\r\n        <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                dispatch({ type: \"ADD\", task: value })\r\n                reset();\r\n            }}>\r\n                <TextField value={value} onChange={handleChange} margin=\"normal\" label=\"Add New Todo\" fullWidth />\r\n            </form>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nexport default TodoForm;","\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TodosProvider from './contexts/todos.context';\r\n\r\n\r\nfunction TodoApp() {\r\n    return (\r\n        <Paper style={{\r\n            padding: 0,\r\n            margin: 0,\r\n            height: \"100vh\",\r\n            backgroundColor: '#fafafa'\r\n        }} elevation={0}>\r\n            <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n                <Toolbar>\r\n                    <Typography color='inherit'>TODOS WITH HOOKS</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n                <Grid item xs={11} md={8} lg={4}>\r\n                    <TodosProvider>\r\n                        <TodoForm />\r\n                        <TodoList />\r\n                    </TodosProvider>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Paper>\r\n\r\n    );\r\n}\r\n\r\nexport default TodoApp;","import TodoApp from './TodoApp';\n\nfunction App() {\n  return (\n    <div>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}